/////          /////            /////             //////////////////       ////////////////////
//////        //////           ///////            ///////////////////      ////////////////////
///////      ///////          /////////           ////////////////////     ////////////////////
////////    ////////         ///// /////          /////          /////     /////
///// ///  /// /////        /////   /////         /////          /////     /////
/////  //////  /////       /////     /////        /////          /////     /////
/////  /////   /////      /////////////////       /////          /////     /////
/////  ////    /////     ///////////////////      /////          /////     /////
/////          /////     ////////////////////     /////          /////     ////////////////////
/////          /////     /////          /////     /////          /////     ////////////////////
/////          /////     /////          /////     /////          /////     ////////////////////
/////          /////     /////          /////     /////          /////     /////
/////          /////     /////          /////     /////          /////     /////
/////          /////     /////          /////     /////          /////     /////
/////          /////     /////          /////     /////          /////     /////
/////          /////     /////          /////     /////          /////     /////
/////          /////     /////          /////     ////////////////////     ////////////////////
/////          /////     /////          /////     ///////////////////      ////////////////////
/////          /////     /////          /////     //////////////////       ////////////////////

// ..................       .....          .....
// ...................      .....          .....
// ....................      .....        ..... 
// .....          .....      .....        ..... 
// .....          .....       .....      .....  
// .....          .....       .....      .....  
// .....          .....        .....    .....   
// .....          .....        .....    .....   
// ....................         .....  .....    
// ....................         .....  .....    
// ....................             .....       
// .....          .....             .....       
// .....          .....             .....       
// .....          .....             .....       
// .....          .....             .....       
// .....          .....             .....       
// ....................             .....       
// ...................              .....       
// ..................               .....     

// $$$$$$$$$$$$$$$$$$$$     $$$$$                    $$$$$$$$$$$$$$$$$$$$     $$$$$          $$$$$     $$$$$$$$$$$$$$$$$$$$     $$$$$$$$$$$$$$$$$$$$
// $$$$$$$$$$$$$$$$$$$$     $$$$$                    $$$$$$$$$$$$$$$$$$$$     $$$$$          $$$$$     $$$$$$$$$$$$$$$$$$$$     $$$$$$$$$$$$$$$$$$$$
// $$$$$$$$$$$$$$$$$$$$     $$$$$                    $$$$$$$$$$$$$$$$$$$$     $$$$$          $$$$$     $$$$$$$$$$$$$$$$$$$$     $$$$$$$$$$$$$$$$$$$$
// $$$$$                    $$$$$                           $$$$$             $$$$$          $$$$$     $$$$$                    $$$$$          $$$$$
// $$$$$                    $$$$$                           $$$$$             $$$$$$         $$$$$     $$$$$                    $$$$$          $$$$$
// $$$$$                    $$$$$                           $$$$$             $$$$$$$        $$$$$     $$$$$                    $$$$$          $$$$$
// $$$$$                    $$$$$                           $$$$$             $$$$$$$$       $$$$$     $$$$$                    $$$$$               
// $$$$$                    $$$$$                           $$$$$             $$$$$$$$$      $$$$$     $$$$$                    $$$$$               
// $$$$$$$$$$$$$$$$$$$$     $$$$$                           $$$$$             $$$$$$$$$$     $$$$$     $$$$$$$$$$$$$$$$$$$$     $$$$$               
// $$$$$$$$$$$$$$$$$$$$     $$$$$                           $$$$$             $$$$$$$$$$$$$$$$$$$$     $$$$$$$$$$$$$$$$$$$$     $$$$$               
// $$$$$$$$$$$$$$$$$$$$     $$$$$                           $$$$$             $$$$$     $$$$$$$$$$     $$$$$$$$$$$$$$$$$$$$     $$$$$     $$$$$$$$$$
// $$$$$                    $$$$$                           $$$$$             $$$$$      $$$$$$$$$     $$$$$                    $$$$$     $$$$$$$$$$
// $$$$$                    $$$$$                           $$$$$             $$$$$       $$$$$$$$     $$$$$                    $$$$$     $$$$$$$$$$
// $$$$$                    $$$$$                           $$$$$             $$$$$        $$$$$$$     $$$$$                    $$$$$          $$$$$
// $$$$$                    $$$$$                           $$$$$             $$$$$         $$$$$$     $$$$$                    $$$$$          $$$$$
// $$$$$                    $$$$$                           $$$$$             $$$$$          $$$$$     $$$$$                    $$$$$          $$$$$
// $$$$$$$$$$$$$$$$$$$$     $$$$$$$$$$$$$$$$$$$$            $$$$$             $$$$$          $$$$$     $$$$$$$$$$$$$$$$$$$$     $$$$$$$$$$$$$$$$$$$$
// $$$$$$$$$$$$$$$$$$$$     $$$$$$$$$$$$$$$$$$$$            $$$$$             $$$$$          $$$$$     $$$$$$$$$$$$$$$$$$$$     $$$$$$$$$$$$$$$$$$$$
// $$$$$$$$$$$$$$$$$$$$     $$$$$$$$$$$$$$$$$$$$            $$$$$             $$$$$          $$$$$     $$$$$$$$$$$$$$$$$$$$     $$$$$$$$$$$$$$$$$$$$

const alphabets = ' ABCDEFGHIJKLMNOPQRSTUVWXYZ';

const mapAlph = () => {
  const alphMap = {};
  try {
    const data = letters;
    const lines = data.split(/\r?\n/);
    lines.shift()
    let currentAlphIndex = -1;
    let lineCount = 1;

    for (const line of lines) {
      if (lineCount % 20 === 1) {
        currentAlphIndex++;
        alphMap[alphabets[currentAlphIndex]] = [line];
      } else if (lineCount % 20 === 0) {
      } else {
        alphMap[alphabets[currentAlphIndex]].push(line);
      }
      lineCount++;
    }
  } catch (err) {
    console.error(err);
  }
  return alphMap;
};

const a = mapAlph();

const transformWord = word => {
  const store = [];
  for (let n = 0; n <= 18; n++) {
    let layerStore = '';
    let i = word.length;
    for (const letter of word.split('')) {
      i--;
      layerStore =
        i !== 0
          ? layerStore + a[letter][n] + '     '
          : layerStore + a[letter][n];
    }
    store.push(layerStore);
  }
  return store.join('\n');
};

const covidize = (word="COVIDIZER", style="@") => transformWord(word.toUpperCase()).replace(/\S/g, style)

window.covidize=covidize
